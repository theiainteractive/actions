name: P4 Lightbuild

on:
  workflow_call:
    secrets:
      token:
        required: true
      aws_access_key_id:
        required: true
      aws_secret_access_key:
        required: true
      slack_webhook_cicd:
        required: true
      p4user:
        required: true
      p4passwd:
        required: true
      p4port:
        required: true
    inputs:
      depot:
        type: string
        required: true
      stream:
        type: string
        required: true

defaults:
  run:
    shell: bash

env:
  UE_CMDLET_PATH: "/c/Epic Games/UE_4.27/Engine/Binaries/Win64/UE4Editor-Cmd.exe"

jobs:
  build-p4:
    runs-on: windows-10-strong
    env:
      P4PORT:    ${{ secrets.p4port }}
      P4USER:    ${{ secrets.p4user }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.token }}

      - name: Checkout Boilerplate Project Code (Build scripts)
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.token }}
          repository: theiainteractive/boilerplate-project
          path: boilerplate-project

      - name: P4 Trust
        uses: perforce/setup-p4@v1
        with:
          command: trust
          arguments: -y

      - name: P4 Login
        uses: perforce/setup-p4@v1
        with:
          command: login
        env:
          P4PASSWD:  ${{ secrets.p4passwd }}

      - name: P4 Client Workspace
        uses: perforce/setup-p4@v1
        with:
          command: client
          arguments: -i
          spec: |
            Client:	gha-p4
            Owner:	${{ secrets.p4user }}
            Description:
              Created by ${{ secrets.p4user }}.
            Root:	${{ github.workspace }}/gha-p4
            Options:	allwrite noclobber nocompress unlocked modtime rmdir
            SubmitOptions:	revertunchanged
            LineEnd:	local
            Stream: //${{ inputs.depot }}/${{ inputs.stream }}
            View:
              //${{ inputs.depot }}/${{ inputs.stream }}/... //gha-p4/...

      - name: P4 Sync
        uses: perforce/setup-p4@v1
        env:
          P4CLIENT: gha-p4
        with:
          command: sync
          arguments: -q -f

      - name: Build Lighting
        run: |
          echo "Building Lights/NavMesh/Etc for ${{ inputs.stream }}..."

          QUALITY=Production
          FLAGS="-Run=ResavePackages -IgnoreChangeList -BuildLighting -Quality=$QUALITY -MapsOnly -ProjectOnly -AllowCommandletRendering"
          for PROJ in gha-p4/*/*.uproject; do
            PROJ_PATH="$(pwd)/$PROJ"
            break
          done

          echo "Generating lightbuild map list..."
          MAP_ARRAY=()
          while read map; do
            echo "  - $map"
            MAP_ARRAY+=("$map")
          done <<< $(yq -r ".build_settings.lightbuild.maps[]" gha-p4/config.yml)

          echo "Building lighting..."
          for map in "${MAP_ARRAY[@]}"; do
            "${{ env.UE_CMDLET_PATH }}" "$PROJ_PATH" $FLAGS -Map=$map
          done

      - name: P4 Diff
        uses: perforce/setup-p4@v1
        env:
          P4CLIENT: gha-p4
        run: p4 diff -f -sa

      - name: P4 Diff Into Edit
        uses: perforce/setup-p4@v1
        env:
          P4CLIENT: gha-p4
        run: p4 diff -f -sa | p4 -x - edit
      
      - name: P4 Submit
        uses: perforce/setup-p4@v1
        env:
          P4CLIENT: gha-p4
        run: p4 submit -d "Automated Lightbuild from GitHub Actions"
